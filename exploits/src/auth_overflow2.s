	.text
	.intel_syntax noprefix
	.file	"auth_overflow2.c"
	.globl	check_authentication
	.p2align	4, 0x90
	.type	check_authentication,@function
check_authentication:                   # @check_authentication
# BB#0:
	push	ebp
	mov	ebp, esp
	sub	esp, 40
	mov	eax, dword ptr [ebp + 8]
	lea	ecx, [ebp - 20]
	mov	dword ptr [ebp - 4], eax
	mov	dword ptr [ebp - 24], 0
	mov	eax, dword ptr [ebp - 4]
	mov	edx, esp
	mov	dword ptr [edx + 4], eax
	mov	dword ptr [edx], ecx
	mov	dword ptr [ebp - 28], ecx # 4-byte Spill
	call	strcpy
	mov	ecx, esp
	mov	edx, dword ptr [ebp - 28] # 4-byte Reload
	mov	dword ptr [ecx], edx
	mov	dword ptr [ecx + 4], .L.str
	mov	dword ptr [ebp - 32], eax # 4-byte Spill
	call	strcmp
	cmp	eax, 0
	jne	.LBB0_2
# BB#1:
	mov	dword ptr [ebp - 24], 1
.LBB0_2:
	lea	eax, [ebp - 20]
	mov	ecx, esp
	mov	dword ptr [ecx], eax
	mov	dword ptr [ecx + 4], .L.str.1
	call	strcmp
	cmp	eax, 0
	jne	.LBB0_4
# BB#3:
	mov	dword ptr [ebp - 24], 1
.LBB0_4:
	mov	eax, dword ptr [ebp - 24]
	add	esp, 40
	pop	ebp
	ret
.Lfunc_end0:
	.size	check_authentication, .Lfunc_end0-check_authentication

	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
# BB#0:
	push	ebp
	mov	ebp, esp
	sub	esp, 56
	mov	eax, dword ptr [ebp + 12]
	mov	ecx, dword ptr [ebp + 8]
	mov	dword ptr [ebp - 4], 0
	mov	dword ptr [ebp - 8], ecx
	mov	dword ptr [ebp - 12], eax
	cmp	dword ptr [ebp - 8], 2
	jge	.LBB1_2
# BB#1:
	lea	eax, [.L.str.2]
	mov	ecx, dword ptr [ebp - 12]
	mov	ecx, dword ptr [ecx]
	mov	dword ptr [esp], eax
	mov	dword ptr [esp + 4], ecx
	call	printf
	xor	ecx, ecx
	mov	dword ptr [esp], 0
	mov	dword ptr [ebp - 16], eax # 4-byte Spill
	mov	dword ptr [ebp - 20], ecx # 4-byte Spill
	call	exit
.LBB1_2:
	mov	eax, dword ptr [ebp - 12]
	mov	eax, dword ptr [eax + 4]
	mov	dword ptr [esp], eax
	call	check_authentication
	cmp	eax, 0
	je	.LBB1_4
# BB#3:
	lea	eax, [.L.str.3]
	mov	dword ptr [esp], eax
	call	printf
	lea	ecx, [.L.str.4]
	mov	dword ptr [esp], ecx
	mov	dword ptr [ebp - 24], eax # 4-byte Spill
	call	printf
	lea	ecx, [.L.str.5]
	mov	dword ptr [esp], ecx
	mov	dword ptr [ebp - 28], eax # 4-byte Spill
	call	printf
	mov	dword ptr [ebp - 32], eax # 4-byte Spill
	jmp	.LBB1_5
.LBB1_4:
	lea	eax, [.L.str.6]
	mov	dword ptr [esp], eax
	call	printf
	mov	dword ptr [ebp - 36], eax # 4-byte Spill
.LBB1_5:
	mov	eax, dword ptr [ebp - 4]
	add	esp, 56
	pop	ebp
	ret
.Lfunc_end1:
	.size	main, .Lfunc_end1-main

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"brillig"
	.size	.L.str, 8

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"outgrabe"
	.size	.L.str.1, 9

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"Usage: %s <password>\n"
	.size	.L.str.2, 22

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"\n=-=-=-=-=-=-=-=-=-=-=-=-=\n"
	.size	.L.str.3, 28

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"        ACCESS GRANTED.\n"
	.size	.L.str.4, 25

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"=-=-=-=-=-=-=-=-=-=-=-=-=-=\n"
	.size	.L.str.5, 29

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"ACCESS DENIED.\n"
	.size	.L.str.6, 16


	.ident	"clang version 3.9.1 (tags/RELEASE_391/final)"
	.section	".note.GNU-stack","",@progbits
